{"version":3,"sources":["Form/styled.js","Result/styled.js","Result/index.js","currencies.js","Container/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","Form/index.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["FormFieldset","styled","fieldset","theme","color","white","breakpoint","mobile","Header","legend","teal","boxShadow","FormButton","button","lightTeal","activeTeal","FormResult","p","Result","result","undefined","sourceAmount","toFixed","targetAmount","currency","currencies","short","rate","name","checked","Container","children","ClockElement","div","formatDate","date","toLocaleString","weekday","hour","minute","second","day","month","year","Clock","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","Form","calculateResult","setCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","type","step","placeholder","min","required","map","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e88b710a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormFieldset = styled.fieldset`\r\n    border: 1px solid rgba(0, 0, 0, 0.76);\r\n    margin: 30px;\r\n    background-color: ${({ theme }) => theme.color.white};\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-basis: 700px;\r\n    margin: 20px;\r\n    padding: 40px;\r\n    border-radius: 20px;\r\n}\r\n  \r\n@media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n      max-width: 90%;\r\n      font-size: 12px; \r\n    }\r\n}\r\n`;\r\n\r\nexport const Header = styled.legend`\r\n    border: solid 1px;\r\n    background-color: ${({ theme }) => theme.color.teal};\r\n    color: ${({ theme }) => theme.color.white};\r\n    box-shadow: 1px 1px 17px 0px ${({ theme }) => theme.color.boxShadow};\r\n    padding: 10px;\r\n    font-size: 34px;\r\n    text-transform: uppercase;\r\n    margin: auto;\r\n    align-items: center;\r\n}\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n    display: block;\r\n    margin: auto;\r\n    border: none;\r\n    padding: 10px;\r\n    max-width: 200px;\r\n    width: 100%;\r\n    box-shadow: 1px 1px 17px 0px ${({ theme }) => theme.color.boxShadow};\r\n    border: none;\r\n    border-radius: 5px;\r\n    background-color: ${({ theme }) => theme.color.teal};\r\n    color: ${({ theme }) => theme.color.white};\r\n    margin-bottom: 30px;\r\n    margin-top: 30px;\r\n}\r\n\r\n    &: hover {\r\n    background-color: ${({ theme }) => theme.color.lightTeal};\r\n  }\r\n  \r\n    &: active {\r\n    background-color: ${({ theme }) => theme.color.activeTeal};\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const FormResult = styled.p` \r\n    border: 1px solid rgba(0, 0, 0, 0.76);\r\n    margin: 30px;\r\n    background-color: ${({ theme }) => theme.color.white};\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-basis: 700px;\r\n    margin: 20px;\r\n    padding: 40px;\r\n    }\r\n\r\n@media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n      max-width: 90%;\r\n      font-size: 12px;\r\n    }\r\n}\r\n`;","import { FormResult } from \"./styled\";\r\n\r\nexport const Result = ({ result }) => (\r\n    <FormResult>\r\n        {result !== undefined && (\r\n            <>\r\n                {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=\r\n                {\" \"}\r\n                <strong>\r\n                    {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </FormResult>\r\n);\r\n\r\nexport default Result;","export const currencies = [\r\n    {\r\n        short: \"EUR\",\r\n        rate: 4.56,\r\n        name: \"EUR\",\r\n        checked: true,\r\n    },\r\n    {\r\n        short: \"USD\",\r\n        rate: 3.77,\r\n        name: \"USD\",\r\n    },\r\n    {\r\n        short: \"GBP\",\r\n        rate: 5.23,\r\n        name: \"GBP\",\r\n    },\r\n];\r\n\r\nexport default currencies;","const Container = ({ children }) => (\r\n    <main>\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import styled from \"styled-components\";\r\n\r\nexport const ClockElement = styled.div`\r\n    font-size: 14px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    padding: 20px;\r\n}\r\n\r\n@media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n      font-size: 12px;\r\n    }\r\n}\r\n`;","import { ClockElement } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    year: \"numeric\"\r\n});\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <ClockElement>\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </ClockElement>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n    return date;\r\n};","import { useState } from \"react\";\r\nimport { FormFieldset, Header, FormButton } from \"./styled\";\r\nimport { Result } from \"../Result\";\r\nimport { currencies } from \"../currencies\";\r\nimport Container from \"../Container\";\r\nimport { Clock } from \"../Clock\";\r\n\r\nexport const Form = ({ calculateResult, result }) => {\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} >\r\n            <FormFieldset>\r\n                <Header>kantor\r\n                </Header>\r\n                <Clock />\r\n                <label>\r\n                    <span>Kwota do wymiany (PLN)* </span>\r\n                    <input\r\n                        value={amount}\r\n                        onChange={({ target }) => setAmount(target.value)}\r\n                        type=\"number\"\r\n                        step=\"any\"\r\n                        placeholder=\"Wpisz kwotę...\"\r\n                        min=\"1\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <p>\r\n                    <label>\r\n                        <span>Wybierz walutę </span>\r\n                        <select\r\n                            value={currency}\r\n                            onChange={({ target }) => setCurrency(target.value)}\r\n                        >\r\n                            {currencies.map((currency => (\r\n                                <option\r\n                                    key={currency.short}\r\n                                    value={currency.short}\r\n                                >\r\n                                    {currency.name}\r\n                                </option>\r\n                            )))}\r\n                        </select>\r\n                    </label>\r\n                </p>\r\n            </FormFieldset>\r\n            <p>\r\n                <FormButton>Policz kurs</FormButton>\r\n            </p> Otrzymasz:\r\n            <Result result={result} />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","export const theme = {\r\n    color: {\r\n        white: \"#fff\",\r\n        teal: \"hsl(180, 100%, 25%)\",\r\n        lightTeal: \"hsl (180, 100%, 30%)\",\r\n        activeTeal: \"hsl (180, 100%, 60%)\",\r\n        boxShadow: \"hsl(208, 79%, 29%)\",\r\n    },\r\n    breakpoint: {\r\n        mobile: 767\r\n    },\r\n};\r\n","import { useState } from \"react\";\nimport Form from \"./Form\";\nimport Container from \"./Container\";\nimport { currencies } from \"./currencies\";\nimport { Result } from \"./Result\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\n\nfunction App() {\n  const [result, setResult] = useState();\n\n  const calculateResult = (currency, amount) => {\n    const rate = currencies\n      .find(({ short }) => short === currency)\n      .rate;\n\n    setResult({\n      sourceAmount: +amount,\n      targetAmount: amount / rate,\n      currency,\n    });\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <div>\n          <Form\n            result={result}\n            calculateResult={calculateResult}\n          />\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}